name: new release

on:
 workflow_dispatch:
    inputs:
      Version:
      description: 'Version'
      required: true
  
env:
  GIT_USER_EMAIL: "actions@github.com"
  GIT_USER_NAME: "GitHub Actions"
  DOCKER_IMAGE_NAME: "dockerbenj/lunchbon_backend"
  DOCKER_REGISTRY: "docker.io"
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_TOKEN }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Set Git identity
        run: |
          git config --global user.email "${{ env.GIT_USER_EMAIL }}"
          git config --global user.name "${{ env.GIT_USER_NAME }}"

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history to allow resetting to any commit

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build
        id: build
        if: success()

      - name: Run Unit Tests
        run: ./gradlew runUnitTests
        if: success()

      - name: Run Integration Tests
        run: ./gradlew runIntegrationTests
        if: success()

      - name: Merge dev into main
        run: |
          git checkout main
          git merge dev
        if: success()

      - name: Build & push Docker image
        id: docker
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: "${{ env.DOCKER_IMAGE_NAME }}"
          tags: "${{ github.event.inputs.Version }}, latest"
          registry: "${{ env.DOCKER_REGISTRY }}"
          dockerfile: Dockerfile
          username: "${{ env.DOCKER_USERNAME }}"
          password: "${{ env.DOCKER_PASSWORD }}"

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: "${{ env.DISCORD_WEBHOOK }}"
        uses: Ilshidur/action-discord@master
        with:
          args: 'New Version of {{ EVENT_PAYLOAD.repository.full_name }} is now available!'
