name: commit hotfix

on:
  push:
    branches:
      - 'hotfix/*'
  pull_request:
    branches:
      - 'hotfix/*'

env:
  GIT_USER_EMAIL: "actions@github.com"
  GIT_USER_NAME: "GitHub Actions"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create artifact directory
        run: mkdir -p resources/build

      - name: Build with Gradle
        run: ./gradlew build
        id: build
        if: success()

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: lunchbon-build
          path: resources/build

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@master

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Unit Tests
        run: ./gradlew runUnitTests
        if: success()

      - name: Run Integration Tests
        run: ./gradlew runIntegrationTests
        if: success()

  lint:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@master

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: "ktlint"
        uses: "vroy/gha-kotlin-linter@v1"

  sync-branch:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Set Git identity
        run: |
          git config --global user.email "${{ env.GIT_USER_EMAIL }}"
          git config --global user.name "${{ env.GIT_USER_NAME }}"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract branch name
        run: echo "CURRENT_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Push hotfix into dev
        run: |
          git fetch origin dev
          git checkout dev
          git merge "${CURRENT_BRANCH}"
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        if: success()

  cleanup:
    needs: sync-branch
    runs-on: ubuntu-latest
    steps:
      - name: Set Git identity
        run: |
          git config --global user.email "${{ env.GIT_USER_EMAIL }}"
          git config --global user.name "${{ env.GIT_USER_NAME }}"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract branch name
        run: echo "CURRENT_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Delete hotfix branch
        run: |
          git checkout dev
          git branch -D "${CURRENT_BRANCH}"
        if: success()