# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches:
      - test

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build
        id: build
        continue-on-error: true

  unit_tests:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ needs.build.result == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Unit Tests
        run: ./gradlew runUnitTests

  merge_to_main:
    needs: unit_tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Merge to main
        run: |
          git checkout main
          git pull origin main
          git merge --no-ff "${{ github.head_ref }}"
          git push origin main

      - name: Build & push Docker image
        id: docker
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: dockerbenj/lunchbon_backend
          tags: v1, latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: success()

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_TOKEN }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'New Version of {{ EVENT_PAYLOAD.repository.full_name }} is now available!'
        if: success() && github.event_name == 'pull_request' && github.ref == 'refs/heads/main'

      - name: Force-push to test branch on failure
        if: failure()
        run: |
          git checkout main
          git branch -f test main
          git push origin test -f
