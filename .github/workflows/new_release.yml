name: new release

on:
  workflow_dispatch:
    inputs:
      Version:
        description: Version
        required: true

env:
  GIT_USER_EMAIL: "actions@github.com"
  GIT_USER_NAME: "GitHub Actions"
  DOCKER_IMAGE_NAME: "dockerbenj/lunchbon_backend"
  DOCKER_IMAGE_TAGS: ${{ github.event.inputs.Version }}
  DOCKER_REGISTRY: "docker.io"
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_TOKEN }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  AWS_SSH: ${{ secrets.AWS_SSH }}
  AWS_IP: ${{ secrets.AWS_IP }}
  AWS_DNS: ${{ secrets.AWS_IP }}
  AWS_HOST: ${{ secrets.AWS_HOST }}

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Set Git identity
        run: |
          git config --global user.email "${{ env.GIT_USER_EMAIL }}"
          git config --global user.name "${{ env.GIT_USER_NAME }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build
        id: build
        if: success()

      - name: Run Unit Tests
        run: ./gradlew runUnitTests
        if: success()

      - name: Run Integration Tests
        run: ./gradlew runIntegrationTests
        if: success()

#  Sonar:
#      runs-on: ubuntu-latest
#      permissions: read-all
#      steps:
#        - uses: actions/checkout@v2
#          with:
#            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#        - name: Set up JDK 17
#          uses: actions/setup-java@v1
#          with:
#            java-version: 17
#        - name: Grant execute permission for gradlew
#          run: chmod +x gradlew
#        - name: Cache SonarQube packages
#          uses: actions/cache@v1
#          with:
#            path: ~/.sonar/cache
#            key: ${{ runner.os }}-sonar
#            restore-keys: ${{ runner.os }}-sonar
#        - name: Cache Gradle packages
#          uses: actions/cache@v1
#          with:
#            path: ~/.gradle/caches
#            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#            restore-keys: ${{ runner.os }}-gradle
#        - name: Build and analyze
#          env:
#            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#          run: ./gradlew build sonar --info

  deploy_docker_image:
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build
        id: build
        if: success()

      - name: Build & push Docker image
        id: docker
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: "${{ env.DOCKER_IMAGE_NAME }}"
          tags: "${{ env.DOCKER_IMAGE_TAGS }},latest"
          registry: "${{ env.DOCKER_REGISTRY }}"
          dockerfile: Dockerfile
          username: "${{ env.DOCKER_USERNAME }}"
          password: "${{ env.DOCKER_PASSWORD }}"

      - name: Set up SSH connection
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AWS_SSH }}

      - name: Connect EC2 instance and run Docker container
        run: |
          IMAGE_NAME="${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAGS }}"
          ssh -i ubuntu@$AWS_HOST "docker pull $IMAGE_NAME && docker run -d --restart unless-stopped -p 80:80 $IMAGE_NAME"

  naughtyfication:
    needs: [ deploy_docker_image ]
    runs-on: ubuntu-latest
    steps:
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: "${{ env.DISCORD_WEBHOOK }}"
        uses: Ilshidur/action-discord@master
        with:
          args: 'Version: ${{ env.DOCKER_IMAGE_TAGS }} of {{ EVENT_PAYLOAD.repository.full_name }} is now available!'

